(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();class l{async fetchQuestion(){try{const e=await fetch("https://courselab.lnu.se/quiz/question/1");if(!e.ok)throw new Error("Error: Failed to fetch data");const t=await e.json();if(!t||Object.keys(t).length===0)throw new Error("Error: Not received !");return t}catch(e){throw new Error("Error: Not fetching !, : "+e.message)}}async post(e,t){return await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})}}class h{constructor(){this.nameForm=document.getElementById("username-form"),this.nameDiv=document.getElementById("username-div"),this.score=0,this.name=""}enterName(){return new Promise((e,t)=>{this.nameDiv.style.display="block",this.nameForm.addEventListener("submit",s=>{s.preventDefault();const n=document.getElementById("username-input").value.trim();this.name=n,n?(this.nameForm.style.display="none",localStorage.setItem("username-input",this.name),e(!0)):(alert("Enter your nickname first!"),t(new Error("No player name provided")))})})}getScore(){return this.score}setScore(e,t){this.score=(t-e)/1e3}getName(){return this.name}}class m{constructor(){this.startButton=document.getElementById("startButton"),this.nameDiv=document.getElementById("username-div"),this.nameForm=document.getElementById("username-form"),this.scoreParagraph=document.getElementById("scores-contain"),this.restartButton=document.getElementById("restartButton"),this.congratsMessage=document.getElementById("win"),this.loserMessage=document.getElementById("lose"),this.timerParagraph=document.getElementById("timer")}createInputElement(e,t,s,n,r){const a=document.createElement("input");return a.type=e,a.id=t,a.name=s,a.value=n,e!=="text"&&a.addEventListener("click",r),a.classList.add("input-style"),a}createLabelElement(e){const t=document.createElement("label");return t.textContent=e,t.classList.add("label-style"),t}createBtnElement(e,t){const s=document.createElement("button");return s.textContent=e,s.addEventListener("click",t),s.classList.add("btn"),s}createTextElement(e,t){const s=document.createElement(e);return s.textContent=t,s.classList.add("q-style"),s}appendElements(e,...t){t.forEach(s=>e.appendChild(s))}storeScore(e,t){const s=this.getHighScores();s.push({playerName:e,score:t}),s.sort((r,a)=>r.score-a.score);const n=s.slice(0,5);localStorage.setItem("highScores",JSON.stringify(n)),console.log("Top 5 Scores:",n)}getHighScores(){const e=localStorage.getItem("highScores");return e?JSON.parse(e):[]}createScoreContent(e){const t=document.getElementById("score-table-body");t.innerHTML="",e.forEach((s,n)=>{const r=document.createElement("tr");r.innerHTML=`<td>${n+1}</td>
                            <td>${s.playerName}</td>
                            <td>${s.score.toFixed(2)}</td>`,t.appendChild(r)})}showScores(){const e=this.getHighScores();this.createScoreContent(e),this.scoreParagraph.style.display="block",console.log("Show Score !");const t=document.getElementById("scoreButton");t.textContent="CLOSE"}hideScores(){const e=document.getElementById("scoreButton");this.scoreParagraph.style.display="none",e.style.display="block",e.textContent="TOP SCORE"}toggleScores(){this.scoreParagraph.style.display==="none"?this.showScores():this.hideScores()}startDisplay(){this.nameDiv.style.display="block",this.startButton.classList.add("hide"),this.nameDiv.style.display="block"}restartDisplay(){this.congratsMessage.style.display="none",this.loserMessage.style.display="none",this.restartButton.style.display="none",this.nameForm.style.display="block",this.paragraphDisplay("none",this.timerParagraph)}paragraphDisplay(e,t){t.style.display=e}}class u{constructor(){this.nameForm=document.getElementById("username-form"),this.nameDiv=document.getElementById("username-div"),this.startButton=document.getElementById("startButton"),this.restartButton=document.getElementById("restartButton"),this.questionContainer=document.getElementById("quastion-contain"),this.questionElement=document.getElementById("question"),this.answerButtonsElement=document.getElementById("choices"),this.scoreButton=document.getElementById("scoreButton"),this.congratsMessage=document.getElementById("win"),this.loserMessage=document.getElementById("lose"),this.timerParagraph=document.getElementById("timer"),this.timer=null,this.startTime=null,this.endTime=null,this.answerButtonsElement=document.getElementById("choices"),this.scoreParagraph=document.getElementById("scores-contain"),this.startButton.addEventListener("click",()=>this.startQuiz()),this.restartButton.addEventListener("click",()=>this.restartQuiz()),this.scoreButton.addEventListener("click",()=>this.gameInterface.toggleScores()),this.fetcher=new l,this.player=new h,this.gameInterface=new m}restartQuiz(){this.gameInterface.restartDisplay(),this.startQuiz()}async startQuiz(){this.gameInterface.startDisplay(),clearInterval(this.timer);try{await this.player.enterName()&&(this.startTime=Date.now(),await this.handleFetchQuestion())}catch(e){console.error("Error :",e.message)}}async handleFetchQuestion(){try{const e=await this.fetcher.fetchQuestion();this.showQuestion(e)}catch(e){console.error("Error fetching question:",e.message)}}showQuestion(e){this.gameInterface.paragraphDisplay("block",this.timerParagraph),this.gameInterface.paragraphDisplay("block",this.questionContainer),this.timeDown();const{question:t,nextURL:s,alternatives:n}=e;this.questionContainer.textContent=`Question: ${t}`,this.showQuestionAndChoices(t,n,s)}congrats(){this.endTime=Date.now(),this.player.setScore(this.startTime,this.endTime);const e=this.player.getName(),t=this.player.getScore();this.gameInterface.storeScore(e,t),this.cleanQuestionContainer(),this.timerParagraph.textContent=`Congratulations  ${this.player.getName()}`,this.gameInterface.paragraphDisplay("block",this.restartButton),this.gameInterface.paragraphDisplay("block",this.congratsMessage)}losing(){this.cleanQuestionContainer(),this.gameInterface.paragraphDisplay("block",this.loserMessage),this.gameInterface.paragraphDisplay("block",this.restartButton),this.gameInterface.paragraphDisplay("none",this.timerParagraph)}timeUp(){this.cleanQuestionContainer(),this.gameInterface.paragraphDisplay("block",this.restartButton),this.gameInterface.paragraphDisplay("block",this.timerParagraph),this.timerParagraph.textContent="Time is up !"}async checkAnswer(e,t){clearInterval(this.timer);try{const s=await this.fetcher.post(t,{answer:e});if(s.ok){const n=await s.json();if(n.nextURL){const a=await(await fetch(n.nextURL)).json();this.showQuestion(a)}else this.congrats()}else throw new Error("fail")}catch{this.losing()}}showQuestionAndChoices(e,t,s){this.cleanQuestionContainer();const n=this.gameInterface.createTextElement("p",e);if(this.gameInterface.appendElements(this.questionContainer,n),t)Object.keys(t).forEach(a=>{const i=this.gameInterface.createInputElement("radio",null,"choices",a,null),c=this.gameInterface.createLabelElement(t[a]);this.gameInterface.appendElements(this.questionContainer,i,c,this.gameInterface.createTextElement("br",""))});else{const a=this.gameInterface.createInputElement("text","answer-input",null,null,null);this.gameInterface.appendElements(this.questionContainer,a)}const r=this.gameInterface.createBtnElement("Answer",()=>this.submitChoice(s));this.gameInterface.appendElements(this.questionContainer,r)}submitChoice(e){const t=document.querySelector('input[name="choices"]:checked'),s=t?t.value:document.getElementById("answer-input").value.trim();s?this.checkAnswer(s,e):console.error("You must select an answer! ")}cleanQuestionContainer(){this.questionContainer.innerHTML=""}async timeDown(){clearInterval(this.timer);const e=()=>{t--,this.timerParagraph.textContent=`Timer: ${t}`,t<=0&&(console.log("Time is up !"),clearInterval(this.timer),this.timeUp())};let t=10;e(),this.timer=setInterval(e,1e3)}}document.addEventListener("DOMContentLoaded",()=>{new u().startQuiz()});
